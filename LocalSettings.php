<?php
# This file was automatically generated by the MediaWiki 1.27.3
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "DATENCOCKPIT_SITENAME";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo = "$wgResourceBasePath/images/Datencockpit.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "";
$wgPasswordSender = "";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "";
$wgDBname = "";
$wgDBuser = "";
$wgDBpassword = "";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = false;

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "de-formal";

$wgSecretKey = "03ab2fb6b4f16d7b65ad5fe24c6217d2bfb0a55ab1d2c3abd5936766815b5603";

# Changing this will log out all existing sessions.
 $wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "f6d84d9c5383278e";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "https://creativecommons.org/licenses/by/4.0/";
$wgRightsText = "''Creative Commons'' „Namensnennung“";
$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-by.png";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['edit'] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'Vector' );
$wgVectorUseSimpleSearch = true;
$wgVectorUseIconWatch = true;

# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtensions('ExtensionName');
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:

# End of automatically generated settings.
# Add more configuration options below.
# KDZ Config

#Caching
$wgParserCacheType = CACHE_ANYTHING; #default: CACHE_ANCTHING
$wgCachePages = false;
$wgEnableSidebarCache = true;

#Short URLs
#$wgArticlePath = "/$1";

#Set Default Timezone
$wgLocaltimezone = "Europe/Vienna";
date_default_timezone_set( $wgLocaltimezone );
$wgDefaultUserOptions['timecorrection'] = 'ZoneInfo|' . (date("I") ? 120 : 60) . '|Europe/Vienna';


# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtensions('ExtensionName');
# to LocalSettings.php. Check specific extension documentation for more details.

wfLoadExtension( 'Cite' );
#wfLoadExtension( 'CiteThisPage' );
#wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
#wfLoadExtension( 'Nuke' );
wfLoadExtension( 'ParserFunctions' );
$wgPFEnableStringFunctions = true;
wfLoadExtension( 'PdfHandler' );
#wfLoadExtension( 'Poem' );
wfLoadExtension( 'Renameuser' );
wfLoadExtension( 'WikiEditor' );
# aber Benutzern immer noch erlauben diese in den Einstellungen zu deaktivieren
$wgDefaultUserOptions['usebetatoolbar'] = 1;
$wgDefaultUserOptions['usebetatoolbar-cgd'] = 1;
$wgDefaultUserOptions['wikieditor-preview'] = 1;
# Zeigt eine Navigationsleiste (Zusammenfassung) auf der rechten Seite
$wgDefaultUserOptions['usenavigabletoc'] = 1;

# Semantic MediaWiki via Composer
# More info: http://semantic-mediawiki.org/wiki/Help:Installation
enableSemantics( parse_url( $wgServer, PHP_URL_HOST ) );
$smwgQEqualitySupport = SMW_EQ_FULL;  // always interpret redirects as equality in queries
$smwgLinksInValues = SMW_LINV_OBFU;
$smwgPageSpecialProperties = array( '_MDAT', '_CDAT', '_NEWP', '_LEDT');
$smwgQMaxInlineLimit = 20000;

# Semantic Result Formats via Composer
# More info: https://semantic-mediawiki.org/wiki/Semantic_Result_Formats
$srfgFormats[] = 'hash';
$srfgFormats[] = 'datatables';
$srfgFormats[] = 'filtered';
$srfgMapProvider='BasemapAT.basemap';

# Semantic Compound Queries via Composer
# More info: https://www.mediawiki.org/wiki/Extension:Semantic_Compound_Queries

# Lingo und Semantic Glossary via Composer
wfLoadExtension( 'SemanticGlossary' );
define("NS_GLOSSAR", 190);
define("NS_GLOSSAR_TALK", 191);

$wgExtraNamespaces[NS_GLOSSAR] = "Glossar";
$wgExtraNamespaces[NS_GLOSSAR_TALK] = "Glossar_talk";
$wgexLingoPage = 'Glossar';
$smwgNamespacesWithSemanticLinks[NS_GLOSSAR] = true;
$wgexLingoCacheType = CACHE_NONE;

# Semantic Internal Objects
# More info: https://www.mediawiki.org/wiki/Extension:Semantic_Internal_Objects
#include_once("$IP/extensions/SemanticInternalObjects/SemanticInternalObjects.php");

# Semantic Drilldown
# More info: https://www.mediawiki.org/wiki/Extension:Semantic_Drilldown
#include_once("$IP/extensions/SemanticDrilldown/SemanticDrilldown.php");

# Page Forms
# More info: https://www.mediawiki.org/wiki/Extension:Page_Forms
wfLoadExtension( 'PageForms' );
$wgPageFormsRenameEditTabs = true;
$sfgRenameEditTabs = true;
$wgPageFormsLinkAllRedLinksToForms = true;
$wgGroupPermissions['*']['viewedittab'] = false;
$wgGroupPermissions['sysop']['viewedittab'] = true;

# HeaderTabs
# More info: https://www.mediawiki.org/wiki/Extension:Header_Tabs
require_once "$IP/extensions/HeaderTabs/HeaderTabs.php";
$wgHeaderTabsRenderSingleTab = true;
$wgHeaderTabsEditTabLink = false;
#$wgHeaderTabsStyle = 'bare';

# Widgets
# More info: https://www.mediawiki.org/wiki/Extension:Widgets
require_once "$IP/extensions/Widgets/Widgets.php";

# TitleIcon
# More info: https://www.mediawiki.org/wiki/Extension:Title_Icon
wfLoadExtension( 'TitleIcon' );
$wgTitleIcon_EnableIconInSearchTitle = true;

# External Data
# More info:
#include_once("$IP/extensions/ExternalData/ExternalData.php");

# Data Transfer
# More info: https://www.mediawiki.org/wiki/Extension:Data_Transfer
include_once("$IP/extensions/DataTransfer/DataTransfer.php");
$wgPhpCli = false;

#BatchUpload
# More info:
wfLoadExtension('SimpleBatchUpload');

# DeleteBatch
# More info: https://www.mediawiki.org/wiki/Extension:DeleteBatch
require_once "$IP/extensions/DeleteBatch/DeleteBatch.php";

# Piwik
# More info: https://www.mediawiki.org/wiki/Extension:Piwik_Integration
#require_once("$IP/extensions/Piwik/Piwik.php");

# Approved Revs
# More info: https://www.mediawiki.org/wiki/Extension:Approved_Revs
#require_once( "$IP/extensions/ApprovedRevs/ApprovedRevs.php" );

# Semantic Comments
# More info: https://www.mediawiki.org/wiki/Extension:SemanticComments
require_once "$IP/extensions/Variables/Variables.php";
include_once("$IP/extensions/SemanticComments/SemanticComments.php");
enableSemanticComments();
$cegEnableCommentFor = CE_COMMENT_AUTH_ONLY;

#Chameleon
$wgDefaultSkin = "chameleon";
$egChameleonLayoutFile= __DIR__ . '/kdz-layout.xml';
$egChameleonExternalLessVariables = array(
    'container-large-desktop' => '100%;',
    'navbar-height' => '40px',
    'table-condensed-cell-padding' => '4px',
    'navbar-default-bg' => 'rgba(99, 141, 187, 1)',
    'dropdown-link-hover-bg' => 'rgba(99, 141, 187, 1)',
);

$egChameleonExternalStyleModules = array(
    __DIR__ . '/variables.less' => $wgScriptPath,
    __DIR__ . '/bootswatch.less' => $wgScriptPath,
    __DIR__ . '/kdz-stylefixes.less' => $wgScriptPath,
);

\Bootstrap\BootstrapManager::getInstance()->addCacheTriggerFile( array('kdz-stylefixes.less' => __DIR__ . '/kdz-stylefixes.less') );

$wgHooks[ 'ChameleonNavbarHorizontalPersonalToolsLinkText' ][] = function ( &$linkText, SkinChameleon $skin ) {

    $userImages = \SMW\StoreFactory::getStore()->getPropertyValues( \SMW\DIWikiPage::newFromTitle( $skin->getUser()->getUserPage() ), \SMW\DIProperty::newFromUserLabel( 'User image' ) );

    if ( !empty( $userImages ) ) {
        $userImage = reset( $userImages );
        if ( is_a( $userImage, '\SMW\DIWikiPage' ) && $userImage->getNamespace() === NS_FILE ) {
            $imagePage = new WikiFilePage( $userImage->getTitle() );
            $linkText = '<img src="' . $imagePage->getFile()->createThumb( 41, 41 ) . '">';
        }
    }

    return true;
};

#Permissions
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['*']['createpage'] = false;
$wgGroupPermissions['*']['createtalk'] = false;
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['writeapi'] = false;
$wgGroupPermissions['sysop']['editwidgets'] = false;
#$wgGroupPermissions['*']['read'] = false;

$wgGroupPermissions['Team']['approvedrevisions'] = true;

$wgGroupPermissions['*']['viewlinktolatest'] = false;
$wgGroupPermissions['user']['viewlinktolatest'] = true;
$wgGroupPermissions['Team']['viewlinktolatest'] = true;
$wgGroupPermissions['sysop']['viewlinktolatest'] = true;

# Disable talk page for anonymous users
$wgDisableAnonTalk = true;

# uploads
$wgEnableUploads = true; # Enable uploads
$wgFileExtensions = array('jpg','jpeg','png','gif','doc','docx','xls','xlsx','ppt','pptx','pdf','odt','zip','txt','csv','xml');

# Namespaces
define("NS_DSGVO", 2000);
define("NS_DSGVO_TALK", 2001);
define("NS_DSG", 2002);
define("NS_DSG_TALK", 2003);
define("NS_NEUIGKEITEN", 2004);
define("NS_NEUIGKEITEN_TALK", 2005);
define("NS_FRAGESTELLUNG", 2006);
define("NS_FRAGESTELLUNG_TALK", 2007);
define("NS_VERFAHREN", 2008);
define("NS_VERFAHREN_TALK", 2009);
define("NS_FOLGEN", 2010);
define("NS_FOLGEN_TALK", 2011);
define("NS_VERLETZUNG", 2012);
define("NS_VERLETZUNG_TALK", 2013);
define("NS_AUSKUNFT", 2014);
define("NS_AUSKUNFT_TALK", 2015);
define("NS_BERICHTIGUNG", 2016);
define("NS_BERICHTIGUNG_TALK", 2017);
define("NS_ANWENDUNG", 2018);
define("NS_ANWENDUNG_TALK", 2019);
define("NS_ABTEILUNG", 2020);
define("NS_ABTEILUNG_TALK", 2021);
define("NS_THEMA", 2022);
define("NS_THEMA_TALK", 2023);
define("NS_INFORMATION", 2024);
define("NS_INFORMATION_TALK", 2025);

$wgExtraNamespaces[NS_DSGVO] = "DSGVO";
$wgExtraNamespaces[NS_DSGVO_TALK] = "DSGVO_talk";
$wgExtraNamespaces[NS_DSG] = "DSG";
$wgExtraNamespaces[NS_DSG_TALK] = "DSG_talk";
$wgExtraNamespaces[NS_NEUIGKEITEN] = "Neuigkeiten";
$wgExtraNamespaces[NS_NEUIGKEITEN_TALK] = "Neuigkeiten_talk";
$wgExtraNamespaces[NS_FRAGESTELLUNG] = "Fragestellung";
$wgExtraNamespaces[NS_FRAGESTELLUNG_TALK] = "Fragestellung_talk";
$wgExtraNamespaces[NS_VERFAHREN] = "Verfahren";
$wgExtraNamespaces[NS_VERFAHREN_TALK] = "Verfahren_talk";
$wgExtraNamespaces[NS_FOLGEN] = "Folgen";
$wgExtraNamespaces[NS_FOLGEN_TALK] = "Folgen_talk";
$wgExtraNamespaces[NS_VERLETZUNG] = "Verletzung";
$wgExtraNamespaces[NS_VERLETZUNG_TALK] = "Verletzung_talk";
$wgExtraNamespaces[NS_AUSKUNFT] = "Auskunft";
$wgExtraNamespaces[NS_AUSKUNFT_TALK] = "Auskunft_talk";
$wgExtraNamespaces[NS_BERICHTIGUNG] = "Berichtigung";
$wgExtraNamespaces[NS_BERICHTIGUNG_TALK] = "Berichtigung_talk";
$wgExtraNamespaces[NS_ANWENDUNG] = "Anwendung";
$wgExtraNamespaces[NS_ANWENDUNG_TALK] = "Anwendung_talk";
$wgExtraNamespaces[NS_ABTEILUNG] = "Abteilung";
$wgExtraNamespaces[NS_ABTEILUNG_TALK] = "Abteilung_talk";
$wgExtraNamespaces[NS_THEMA] = "Thema";
$wgExtraNamespaces[NS_THEMA_TALK] = "Thema_talk";
$wgExtraNamespaces[NS_INFORMATION] = "Information";
$wgExtraNamespaces[NS_INFORMATION_TALK] = "Information_talk";

$smwgNamespacesWithSemanticLinks[NS_DSGVO] = true;
$smwgNamespacesWithSemanticLinks[NS_DSG] = true;
$smwgNamespacesWithSemanticLinks[NS_NEUIGKEITEN] = true;
$smwgNamespacesWithSemanticLinks[NS_FRAGESTELLUNG] = true;
$smwgNamespacesWithSemanticLinks[NS_VERFAHREN] = true;
$smwgNamespacesWithSemanticLinks[NS_FOLGEN] = true;
$smwgNamespacesWithSemanticLinks[NS_VERLETZUNG] = true;
$smwgNamespacesWithSemanticLinks[NS_AUSKUNFT] = true;
$smwgNamespacesWithSemanticLinks[NS_BERICHTIGUNG] = true;
$smwgNamespacesWithSemanticLinks[NS_ANWENDUNG] = true;
$smwgNamespacesWithSemanticLinks[NS_ABTEILUNG] = true;
$smwgNamespacesWithSemanticLinks[NS_THEMA] = true;
$smwgNamespacesWithSemanticLinks[NS_INFORMATION] = true;

$wgNamespacesToBeSearchedDefault[NS_DSGVO] = true;
$wgNamespacesToBeSearchedDefault[NS_DSG] = true;
$wgNamespacesToBeSearchedDefault[NS_NEUIGKEITEN] = true;
$wgNamespacesToBeSearchedDefault[NS_FRAGESTELLUNG] = true;
$wgNamespacesToBeSearchedDefault[NS_VERFAHREN] = true;
$wgNamespacesToBeSearchedDefault[NS_FOLGEN] = true;
$wgNamespacesToBeSearchedDefault[NS_VERLETZUNG] = true;
$wgNamespacesToBeSearchedDefault[NS_AUSKUNFT] = true;
$wgNamespacesToBeSearchedDefault[NS_BERICHTIGUNG] = true;
$wgNamespacesToBeSearchedDefault[NS_ANWENDUNG] = true;
$wgNamespacesToBeSearchedDefault[NS_ABTEILUNG] = true;
$wgNamespacesToBeSearchedDefault[NS_THEMA] = true;
$wgNamespacesToBeSearchedDefault[NS_INFORMATION] = true;

$wgFooterIcons['poweredby']['kdz'] = array(
	"src" => "http://www.datencockpit.at/images/projektvon_kdz.png",
	"url" => "http://www.kdz.or.at",
	"alt" => "ein Projekt des KDZ",
	"height" => "31",
	"width" => "100",
);
$wgFooterIcons['poweredby']['wikiahoi'] = array(
	"src" => "http://www.datencockpit.at/images/projektvon_wikiahoi.png",
	"url" => "http://www.wikiahoi.at/dsgvo/",
	"alt" => "ein Projekt von Wikiahoi",
	"height" => "31",
	"width" => "100",
);
$wgFooterIcons['poweredby']['netidee'] = array(
	"src" => "http://www.datencockpit.at/images/0/0e/Netidee.jpg",
	"url" => "https://www.netidee.at",
	"alt" => "supported by netidee.at",
	"height" => "31",
	"width" => "100",
);
unset ($wgFooterIcons['poweredby']['mediawiki']);

#Error handling
$wgShowExceptionDetails = true;
$wgShowSQLErrors = true;
$wgShowDBErrorBacktrace = true;
#index.php error reporting can be set!
